name: Build Docker Image and Generate SBOM

on:
  push:
    branches: [ "master" ]
    paths:
      - 'Dockerfile'
      - 'seccomp.json'
      - '.github/workflows/build-and-sbom.yml'
  pull_request:
    branches: [ "master" ]
    paths:
      - 'Dockerfile'
      - 'seccomp.json'
      - '.github/workflows/build-and-sbom.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Required for pushing to GHCR
      #id-token: write # If you plan to use OIDC for GHCR login, not strictly needed for DOCKERHUB_TOKEN

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub # Or GitHub Container Registry if you prefer ghcr.io
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # Use DOCKERHUB_USERNAME
          password: ${{ secrets.DOCKERHUB_TOKEN }}   # Use DOCKERHUB_TOKEN
          # If using GHCR, use:
          # registry: ghcr.io
          # username: ${{ github.actor }}
          # password: ${{ secrets.GITHUB_TOKEN }} # This secret is automatically available


      - name: Build and Push the Docker image
        uses: docker/build-push-action@v5
        id: build-push # Keep this ID, it's used to reference the image
        with:
          context: .
          file: ./Dockerfile
          security-opt: seccomp=seccomp.json # Apply Seccomp profile at build time
          # Use the correct tag for Docker Hub or GHCR
          tags: secpro-jgo/jq-secure-image:latest # <--- REPLACE with YOUR Docker Hub username/image name, or ghcr.io/${{ github.repository_owner }}/jq-secure-image:latest for GHCR
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }} # Only push on push to master
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # IMPORTANT: This output makes the image tag available to subsequent steps
          output: type=image,name=secpro-jgo/jq-secure-image:latest # <--- REPLACE with the SAME tag as above!

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master # Or a specific version like @0.20.0
        with:
          # Use the image tag from the previous build step's output
          image-ref: secpro-jgo/jq-secure-image:latest # <--- REPLACE with the SAME tag as above!
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          output: 'trivy-results.json'

      - name: Upload Trivy scan results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-results
          path: trivy-results.json

      - name: Generate SBOM with Syft
        uses: anchore/syft-action@v0
        with:
          # Use the image tag from the previous build step's output
          image: secpro-jgo/jq-secure-image:latest # <--- REPLACE with the SAME tag as above!
          output: spdx-json
          file: sbom.spdx-json

      - name: Upload SBOM as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx-json